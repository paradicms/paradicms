name: Build
on: [ push, workflow_dispatch ]
jobs:
  build:
    name: Build and test gui
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: "1"
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
        id: extract_branch
      - name: Check out the etl repo
        uses: actions/checkout@v2
        with:
          path: etl
          repository: paradicms/etl
      - name: Check out the gui repo
        uses: actions/checkout@v2
        with:
          path: gui
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('gui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache Next.js cache
        uses: actions/cache@v2
        with:
          path: gui/app/*/.next/cache
          key: ${{ runner.OS }}-node-${{ hashFiles('gui/yarn.lock') }}
      - name: Build and test gui
        run: |
          cd gui
          export PATH=$PATH:$PWD/node_modules/.bin
          script/cibuild
      # Commented out to speed up the build
      #      - name: Test gui_loader
      #        run: |
      #          cd etl
      #          pytest --junitxml=test-results/gui_loader.xml test/paradicms_etl_test/loaders/gui/gui_builder_test.py test/paradicms_etl_test/loaders/gui/gui_loader_test.py
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: steps.extract_branch.outputs.branch == 'master'
      - name: Move Dockerfile to be above both checkouts
        run: |
          mv gui/.dockerignore .
          mv gui/Dockerfile .
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
        if: steps.extract_branch.outputs.branch == 'master'
