name: Build and push Docker image
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Install Node.js and Python dependencies in order to cache them
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11.x"
          # Don't use cache: here, doesn't work well for projects with multiple files
      - uses: actions/cache@v3
        name: Cache pip dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "Yarn cache directory: $(yarn cache dir)"
      - uses: actions/cache@v3
        name: Cache yarn dependencies
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: |
          cd $GITHUB_WORKSPACE/lib/py/etl && pip install -qqq .
          cd $GITHUB_WORKSPACE/lib/py/nlp && pip install -qqq .
          cd $GITHUB_WORKSPACE/lib/py/ssg && pip install -qqq .
        name: Install Python dependencies locally in order to cache them
      - run: yarn install
        name: Install Node.js dependencies locally in order to cache them
      - run: mv ~/.cache pip-yarn-cache
        name: Move Node.js and Python dependencies to a directory where they can be used b Docker
      - run: df
        name: Check space
      - run: find . -name node_modules | xargs rm -fr
        name: Delete node_modules to free up space
      - run: |
          find /usr/local/lib/python3*
          rm -fr /usr/local/lib/python3*
        name: Delete Python -packages to free up space
      - run: df
        name: Check space
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
      - name: Move the Node.js and Python dependencies cache back in place so it can be saved
        run: mv pip-yarn-cache ~/.cache
