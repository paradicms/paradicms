[tool.poetry]
name = "paradicms-nlp"
version = "0.0.1"
description = ""
authors = ["Minor G. <minorg@server.fake>"]
license = "GPLv3"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
python-dateutil = "^2.8.2"
types-python-dateutil = "^2.8.19.14"
spacy = "3.6.1"
# en-core-web-md = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.6.0/en_core_web_md-3.6.0-py3-none-any.whl"}
# en-core-web-lg = {url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_lg-3.6.0/en_core_web_lg-3.6.0-py3-none-any.whl"}
en-core-web-trf = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.6.1/en_core_web_trf-3.6.1-py3-none-any.whl" }
spacy-wordnet = "^0.1.0"
pdftotext = "^2.2.2"
pdfminer-six = "^20221105"
spacy-llm = "^0.4.3"
tiktoken = "^0.4.0"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
flake8 = "^4.0.1"
mypy = "^0.981"
paradicms-etl = { path = "../etl", develop = true }
paradicms-ssg = { path = "../ssg", develop = true }
pytest = "^7.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.285"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["pdftotext"]
ignore_missing_imports = true

[tool.ruff]
ignore = [
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls,
    "ANN204", # Missing return type annotation for __init__
    "COM812", # Trailing comma missing
    "D",      # Missing docstrings
    "E501",   # Line too long
    "EM102",  # Exception must not use an f-string literal
    "ERA001", # Commented-out code
    "FA",     # Missing from __future__ import annotations
    "I001",   # Import block is un-sorted or un-formatted
    "ICN001", # Pandas should be imported as pd
    "N815",   # Mixed-case variables
    "TRY003", # Avoid specifying long messages outside the exception class
]
select = ["ALL"]
src = ["paradicms_nlp"]
target-version = "py310"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["target_rdf"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"
